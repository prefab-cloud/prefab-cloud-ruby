# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: prefab.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file('prefab.proto', syntax: :proto3) do
    add_message 'prefab.ConfigServicePointer' do
      optional :project_id, :int64, 1
      optional :start_at_id, :int64, 2
      optional :project_env_id, :int64, 3
    end
    add_message 'prefab.ConfigValue' do
      oneof :type do
        optional :int, :int64, 1
        optional :string, :string, 2
        optional :bytes, :bytes, 3
        optional :double, :double, 4
        optional :bool, :bool, 5
        optional :feature_flag, :message, 6, 'prefab.FeatureFlag'
        optional :limit_definition, :message, 7, 'prefab.LimitDefinition'
        optional :segment, :message, 8, 'prefab.Segment'
        optional :log_level, :enum, 9, 'prefab.LogLevel'
      end
    end
    add_message 'prefab.Configs' do
      repeated :configs, :message, 1, 'prefab.Config'
      optional :config_service_pointer, :message, 2, 'prefab.ConfigServicePointer'
    end
    add_message 'prefab.Config' do
      optional :id, :int64, 1
      optional :project_id, :int64, 2
      optional :key, :string, 3
      optional :changed_by, :string, 4
      repeated :rows, :message, 5, 'prefab.ConfigRow'
      repeated :variants, :message, 6, 'prefab.FeatureFlagVariant'
    end
    add_message 'prefab.ConfigRow' do
      optional :project_env_id, :int64, 1
      optional :namespace, :string, 2
      optional :value, :message, 3, 'prefab.ConfigValue'
    end
    add_message 'prefab.LimitResponse' do
      optional :passed, :bool, 1
      optional :expires_at, :int64, 2
      optional :enforced_group, :string, 3
      optional :current_bucket, :int64, 4
      optional :policy_group, :string, 5
      optional :policy_name, :enum, 6, 'prefab.LimitResponse.LimitPolicyNames'
      optional :policy_limit, :int32, 7
      optional :amount, :int64, 8
      optional :limit_reset_at, :int64, 9
      optional :safety_level, :enum, 10, 'prefab.LimitDefinition.SafetyLevel'
    end
    add_enum 'prefab.LimitResponse.LimitPolicyNames' do
      value :NOT_SET, 0
      value :SECONDLY_ROLLING, 1
      value :MINUTELY_ROLLING, 3
      value :HOURLY_ROLLING, 5
      value :DAILY_ROLLING, 7
      value :MONTHLY_ROLLING, 8
      value :INFINITE, 9
      value :YEARLY_ROLLING, 10
    end
    add_message 'prefab.LimitRequest' do
      optional :account_id, :int64, 1
      optional :acquire_amount, :int32, 2
      repeated :groups, :string, 3
      optional :limit_combiner, :enum, 4, 'prefab.LimitRequest.LimitCombiner'
      optional :allow_partial_response, :bool, 5
      optional :safety_level, :enum, 6, 'prefab.LimitDefinition.SafetyLevel'
    end
    add_enum 'prefab.LimitRequest.LimitCombiner' do
      value :NOT_SET, 0
      value :MINIMUM, 1
      value :MAXIMUM, 2
    end
    add_message 'prefab.FeatureFlagVariant' do
      proto3_optional :int, :int64, 1
      proto3_optional :string, :string, 2
      proto3_optional :double, :double, 3
      proto3_optional :bool, :bool, 4
      optional :name, :string, 5
      optional :description, :string, 6
    end
    add_message 'prefab.Criteria' do
      optional :property, :string, 1
      optional :operator, :enum, 2, 'prefab.Criteria.CriteriaOperator'
      repeated :values, :string, 3
    end
    add_enum 'prefab.Criteria.CriteriaOperator' do
      value :NOT_SET, 0
      value :LOOKUP_KEY_IN, 1
      value :LOOKUP_KEY_NOT_IN, 2
      value :IN_SEG, 3
      value :NOT_IN_SEG, 4
      value :ALWAYS_TRUE, 5
      value :PROP_IS_ONE_OF, 6
      value :PROP_IS_NOT_ONE_OF, 7
      value :PROP_ENDS_WITH_ONE_OF, 8
      value :PROP_DOES_NOT_END_WITH_ONE_OF, 9
    end
    add_message 'prefab.Rule' do
      optional :criteria, :message, 1, 'prefab.Criteria'
      repeated :variant_weights, :message, 2, 'prefab.VariantWeight'
    end
    add_message 'prefab.Segment' do
      repeated :criterion, :message, 1, 'prefab.Criteria'
    end
    add_message 'prefab.VariantWeight' do
      optional :weight, :int32, 1
      optional :variant_idx, :int32, 2
    end
    add_message 'prefab.FeatureFlag' do
      optional :active, :bool, 1
      optional :inactive_variant_idx, :int32, 2
      repeated :rules, :message, 5, 'prefab.Rule'
    end
    add_message 'prefab.Identity' do
      proto3_optional :lookup, :string, 1
      map :attributes, :string, :string, 2
    end
    add_message 'prefab.ClientConfigValue' do
      proto3_optional :int, :int64, 1
      proto3_optional :string, :string, 2
      proto3_optional :double, :double, 3
      proto3_optional :bool, :bool, 4
    end
    add_message 'prefab.ConfigEvaluations' do
      map :values, :string, :message, 1, 'prefab.ClientConfigValue'
    end
    add_message 'prefab.LimitDefinition' do
      optional :policy_name, :enum, 2, 'prefab.LimitResponse.LimitPolicyNames'
      optional :limit, :int32, 3
      optional :burst, :int32, 4
      optional :account_id, :int64, 5
      optional :last_modified, :int64, 6
      optional :returnable, :bool, 7
      optional :safety_level, :enum, 8, 'prefab.LimitDefinition.SafetyLevel'
    end
    add_enum 'prefab.LimitDefinition.SafetyLevel' do
      value :NOT_SET, 0
      value :L4_BEST_EFFORT, 4
      value :L5_BOMBPROOF, 5
    end
    add_message 'prefab.LimitDefinitions' do
      repeated :definitions, :message, 1, 'prefab.LimitDefinition'
    end
    add_message 'prefab.BufferedRequest' do
      optional :account_id, :int64, 1
      optional :method, :string, 2
      optional :uri, :string, 3
      optional :body, :string, 4
      repeated :limit_groups, :string, 5
      optional :content_type, :string, 6
      optional :fifo, :bool, 7
    end
    add_message 'prefab.BatchRequest' do
      optional :account_id, :int64, 1
      optional :method, :string, 2
      optional :uri, :string, 3
      optional :body, :string, 4
      repeated :limit_groups, :string, 5
      optional :batch_template, :string, 6
      optional :batch_separator, :string, 7
    end
    add_message 'prefab.BasicResponse' do
      optional :message, :string, 1
    end
    add_message 'prefab.CreationResponse' do
      optional :message, :string, 1
      optional :new_id, :int64, 2
    end
    add_message 'prefab.IdBlock' do
      optional :project_id, :int64, 1
      optional :project_env_id, :int64, 2
      optional :sequence_name, :string, 3
      optional :start, :int64, 4
      optional :end, :int64, 5
    end
    add_message 'prefab.IdBlockRequest' do
      optional :project_id, :int64, 1
      optional :project_env_id, :int64, 2
      optional :sequence_name, :string, 3
      optional :size, :int64, 4
    end
    add_enum 'prefab.LogLevel' do
      value :NOT_SET_LOG_LEVEL, 0
      value :TRACE, 1
      value :DEBUG, 2
      value :INFO, 3
      value :WARN, 5
      value :ERROR, 6
      value :FATAL, 9
    end
    add_enum 'prefab.OnFailure' do
      value :NOT_SET, 0
      value :LOG_AND_PASS, 1
      value :LOG_AND_FAIL, 2
      value :THROW, 3
    end
  end
end

module Prefab
  ConfigServicePointer = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.ConfigServicePointer').msgclass
  ConfigValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.ConfigValue').msgclass
  Configs = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.Configs').msgclass
  Config = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.Config').msgclass
  ConfigRow = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.ConfigRow').msgclass
  LimitResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.LimitResponse').msgclass
  LimitResponse::LimitPolicyNames = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.LimitResponse.LimitPolicyNames').enummodule
  LimitRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.LimitRequest').msgclass
  LimitRequest::LimitCombiner = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.LimitRequest.LimitCombiner').enummodule
  FeatureFlagVariant = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.FeatureFlagVariant').msgclass
  Criteria = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.Criteria').msgclass
  Criteria::CriteriaOperator = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.Criteria.CriteriaOperator').enummodule
  Rule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.Rule').msgclass
  Segment = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.Segment').msgclass
  VariantWeight = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.VariantWeight').msgclass
  FeatureFlag = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.FeatureFlag').msgclass
  Identity = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.Identity').msgclass
  ClientConfigValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.ClientConfigValue').msgclass
  ConfigEvaluations = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.ConfigEvaluations').msgclass
  LimitDefinition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.LimitDefinition').msgclass
  LimitDefinition::SafetyLevel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.LimitDefinition.SafetyLevel').enummodule
  LimitDefinitions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.LimitDefinitions').msgclass
  BufferedRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.BufferedRequest').msgclass
  BatchRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.BatchRequest').msgclass
  BasicResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.BasicResponse').msgclass
  CreationResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.CreationResponse').msgclass
  IdBlock = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.IdBlock').msgclass
  IdBlockRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.IdBlockRequest').msgclass
  LogLevel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.LogLevel').enummodule
  OnFailure = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('prefab.OnFailure').enummodule
end
